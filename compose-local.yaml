services:
  database:
    image: postgres:15
    restart: always
    # command: postgres -c 'max_connections=300'
    container_name: athena-database-container
    env_file: compose-local.env
    volumes:
       - postgres:/var/lib/postgresql/data
    ports:
      - ${EXPOSED_DATABASE_PORT}:5432

  alembic:
    build:
      context: ./ares/
      dockerfile: Dockerfile
    container_name: athena-alembic-container
    env_file: compose-local.env
    depends_on:
      - database
    image: athena-project-ares
    command: bash -c "
      cd .. &&\
      sleep 1 &&\
      alembic upgrade head"
    volumes_from:
      - database
  
  proxy:
    image: traefik:v2.10.1
    container_name: athena-proxy-container
    command:
      - "--log.level=DEBUG"
      - "--accesslog"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

  ares:
    build:
      context: ./ares/
      dockerfile: Dockerfile
    container_name: athena-ares-container
    # restart: on-failure
    env_file: compose-local.env
    depends_on:
      - alembic
      - proxy
    image: athena-project-ares
    # ports:
      # - "8000:8000"
    command: bash -c "
      sleep 3 &&\
      uvicorn main:app --reload --workers 1 --host 0.0.0.0 --port 8000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ares.entrypoints=web"
      - "traefik.http.routers.ares.rule=Host(`localhost`) && PathPrefix(`/api`)"
      - "traefik.http.routers.ares.service=ares"
      - "traefik.http.services.ares.loadbalancer.server.port=8000"
      - "traefik.http.middlewares.ares.stripprefix.prefixes=/api"
      - "traefik.http.middlewares.ares.stripprefix.forceslash=false"
      - "traefik.http.routers.ares.middlewares=ares"      

  apollo:
    build:
      context: ./apollo/
      dockerfile: Dockerfile
    container_name: athena-apollo-container
    # restart: on-failure
    env_file: compose-local.env
    depends_on:
      - ares
      - proxy
    image: athena-project-apollo
    # ports:
      # - "8001:8001"
    command: bash -c "
      sleep 4 &&\
      uvicorn main:app --reload --workers 1 --host 0.0.0.0 --port 8001"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.apollo.entrypoints=web"
      - "traefik.http.routers.apollo.rule=Host(`localhost`)"
      - "traefik.http.routers.apollo.service=apollo"
      - "traefik.http.services.apollo.loadbalancer.server.port=8001"
volumes:
  postgres: